version: '3.8'

networks:
  test-networks:
volumes:
  postgres_data:

services:
  # Database storage
  db:
    container_name: db-nest
    image: postgres:14.3-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=test
      - POSTGRES_DB=db-test
    networks:
      - test-networks

  # Redis for cached    
  redis:
    container_name: redis-nest
    image: redis:6
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    volumes:
      - ./docker/config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - test-networks

  # Tempo for tracing
  tempo:
    container_name: tempo-nest
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./docker/etc/tempo-local.yaml:/etc/tempo.yaml
      - ./docker/data/tempo-data:/tmp/tempo
    ports:
      - "14268:14268"  # jaeger ingest, Jaeger - Thrift HTTP
      - "14250:14250" # Jaeger - GRPC
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
    networks:
      - test-networks

  # Scrapped the metrics
  prometheus:
    container_name: prometheus-nest
    image: prom/prometheus:latest
    volumes:
      - ./docker/etc/prometheus.yaml:/etc/prometheus.yaml
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
    ports:
      - "9090:9090"
    networks:
      - test-networks

  # Scrapped the logging
  loki:
    container_name: loki-nest
    image: grafana/loki:2.8.0
    ports:
      - "3100:3100"
    user: "0"
    command: -config.file=/etc/loki/loki-local.yaml
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./docker/etc/loki-local.yaml:/etc/loki/loki-local.yaml
      - ./docker/data/loki-data:/tmp/loki
    networks:
      - test-networks

  promtail:
    container_name: promtail-nest
    image: grafana/promtail:2.8.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
      - test-networks

  grafana:
    container_name: grafana-nest
    image: grafana/grafana:latest
    volumes:
      - ./docker/data/grafana-data/datasources:/etc/grafana/provisioning/datasources
      - ./docker/data/grafana-data/dashboards-provisioning:/etc/grafana/provisioning/dashboards
      - ./docker/data/grafana-data/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - tempo
      - loki
    networks:
      - test-networks